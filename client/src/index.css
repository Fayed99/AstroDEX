@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 220 15% 12%;

  --border: 220 13% 91%;

  --card: 220 14% 97%;

  --card-foreground: 220 15% 12%;

  --card-border: 220 13% 93%;

  --sidebar: 220 14% 95%;

  --sidebar-foreground: 220 15% 12%;

  --sidebar-border: 220 13% 90%;

  --sidebar-primary: 217 91% 48%;

  --sidebar-primary-foreground: 220 14% 98%;

  --sidebar-accent: 220 14% 92%;

  --sidebar-accent-foreground: 220 15% 12%;

  --sidebar-ring: 217 91% 48%;

  --popover: 220 14% 94%;

  --popover-foreground: 220 15% 12%;

  --popover-border: 220 13% 89%;

  --primary: 217 91% 48%;

  --primary-foreground: 220 14% 98%;

  --secondary: 220 14% 90%;

  --secondary-foreground: 220 15% 12%;

  --muted: 220 12% 93%;

  --muted-foreground: 220 13% 35%;

  --accent: 220 15% 91%;

  --accent-foreground: 220 15% 12%;

  --destructive: 0 84% 42%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 75%;
  --ring: 217 91% 48%;
  --chart-1: 217 91% 48%;
  --chart-2: 142 76% 36%;
  --chart-3: 262 83% 58%;
  --chart-4: 33 100% 50%;
  --chart-5: 340 82% 52%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', Menlo, Monaco, 'Courier New', monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 12% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 12% / 0.08);
  --shadow-sm: 0px 2px 4px -1px hsl(220 15% 12% / 0.06), 0px 1px 2px -1px hsl(220 15% 12% / 0.05);
  --shadow: 0px 4px 6px -1px hsl(220 15% 12% / 0.08), 0px 2px 4px -2px hsl(220 15% 12% / 0.05);
  --shadow-md: 0px 6px 12px -2px hsl(220 15% 12% / 0.10), 0px 3px 6px -3px hsl(220 15% 12% / 0.08);
  --shadow-lg: 0px 10px 20px -4px hsl(220 15% 12% / 0.12), 0px 4px 8px -4px hsl(220 15% 12% / 0.08);
  --shadow-xl: 0px 20px 30px -6px hsl(220 15% 12% / 0.15), 0px 8px 12px -6px hsl(220 15% 12% / 0.10);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 15% 12% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .20);
  --badge-outline: rgba(255,255,255, .10);

  --opaque-button-border-intensity: 12;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .08);
  --elevate-2: rgba(255,255,255, .15);

  --background: 260 40% 8%;

  --foreground: 220 25% 98%;

  --border: 260 30% 25%;

  --card: 260 35% 12%;

  --card-foreground: 220 25% 98%;

  --card-border: 260 30% 20%;

  --sidebar: 260 35% 14%;

  --sidebar-foreground: 220 25% 98%;

  --sidebar-border: 260 30% 22%;

  --sidebar-primary: 270 70% 60%;

  --sidebar-primary-foreground: 220 25% 100%;

  --sidebar-accent: 260 35% 20%;

  --sidebar-accent-foreground: 220 25% 98%;

  --sidebar-ring: 270 70% 60%;

  --popover: 260 35% 15%;

  --popover-foreground: 220 25% 98%;

  --popover-border: 260 30% 24%;

  --primary: 270 70% 60%;

  --primary-foreground: 220 25% 100%;

  --secondary: 260 35% 22%;

  --secondary-foreground: 220 25% 98%;

  --muted: 260 30% 18%;

  --muted-foreground: 220 20% 85%;

  --accent: 260 35% 20%;

  --accent-foreground: 220 25% 98%;

  --destructive: 0 84% 55%;

  --destructive-foreground: 0 0% 100%;

  --input: 260 30% 30%;
  --ring: 270 70% 60%;
  --chart-1: 270 70% 65%;
  --chart-2: 180 70% 60%;
  --chart-3: 290 75% 70%;
  --chart-4: 200 80% 65%;
  --chart-5: 320 75% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 4% / 0.30);
  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 4% / 0.40);
  --shadow-sm: 0px 2px 4px -1px hsl(220 15% 4% / 0.35), 0px 1px 2px -1px hsl(220 15% 4% / 0.30);
  --shadow: 0px 4px 6px -1px hsl(220 15% 4% / 0.40), 0px 2px 4px -2px hsl(220 15% 4% / 0.35);
  --shadow-md: 0px 6px 12px -2px hsl(220 15% 4% / 0.45), 0px 3px 6px -3px hsl(220 15% 4% / 0.40);
  --shadow-lg: 0px 10px 20px -4px hsl(220 15% 4% / 0.50), 0px 4px 8px -4px hsl(220 15% 4% / 0.45);
  --shadow-xl: 0px 20px 30px -6px hsl(220 15% 4% / 0.55), 0px 8px 12px -6px hsl(220 15% 4% / 0.50);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 15% 4% / 0.60);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased text-foreground;
    background:
      radial-gradient(ellipse at 50% 50%, #1a0b3e 0%, #0a0118 100%),
      linear-gradient(135deg, #0a0118 0%, #1a0b2e 25%, #2d1b4e 50%, #1a0b2e 75%, #0a0118 100%);
    background-attachment: fixed;
    position: relative;
    overflow-x: hidden;
    min-height: 100vh;
  }

  /* Dense animated starfield with multiple layers */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 200%;
    height: 200%;
    background-image:
      /* Bright stars */
      radial-gradient(2px 2px at 20% 30%, rgba(255, 255, 255, 0.9), transparent),
      radial-gradient(2px 2px at 60% 70%, rgba(200, 200, 255, 0.8), transparent),
      radial-gradient(1px 1px at 50% 50%, rgba(255, 255, 255, 0.7), transparent),
      radial-gradient(1px 1px at 80% 10%, rgba(200, 200, 255, 0.6), transparent),
      radial-gradient(2px 2px at 90% 60%, rgba(255, 200, 255, 0.8), transparent),
      radial-gradient(1px 1px at 15% 80%, rgba(255, 255, 255, 0.5), transparent),
      radial-gradient(2px 2px at 45% 15%, rgba(180, 180, 255, 0.7), transparent),
      radial-gradient(1px 1px at 75% 45%, rgba(255, 220, 255, 0.6), transparent),
      /* Distant stars */
      radial-gradient(1px 1px at 33% 66%, rgba(255, 255, 255, 0.4), transparent),
      radial-gradient(1px 1px at 88% 25%, rgba(200, 200, 255, 0.3), transparent),
      radial-gradient(1px 1px at 10% 40%, rgba(255, 255, 255, 0.4), transparent),
      radial-gradient(1px 1px at 95% 85%, rgba(220, 220, 255, 0.3), transparent);
    background-size: 300px 300px, 250px 250px, 200px 200px;
    background-position: 0 0, 50px 60px, 130px 270px;
    animation: starfield 200s linear infinite;
    pointer-events: none;
    z-index: 0;
  }

  /* Cosmic nebula effect with enhanced colors */
  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
      radial-gradient(ellipse at 20% 30%, rgba(138, 43, 226, 0.25) 0%, transparent 40%),
      radial-gradient(ellipse at 80% 70%, rgba(30, 144, 255, 0.2) 0%, transparent 45%),
      radial-gradient(ellipse at 50% 50%, rgba(138, 43, 226, 0.15) 0%, transparent 50%),
      radial-gradient(circle at 10% 80%, rgba(255, 0, 255, 0.1) 0%, transparent 35%),
      radial-gradient(circle at 90% 20%, rgba(0, 200, 255, 0.12) 0%, transparent 40%);
    pointer-events: none;
    z-index: 0;
    animation: nebula 30s ease-in-out infinite alternate;
  }

  /* Shooting stars container */
  #root::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
    background: transparent;
  }

  /* Distant planets */
  #root::after {
    content: '';
    position: fixed;
    top: 10%;
    right: 5%;
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background:
      radial-gradient(circle at 30% 30%, rgba(180, 100, 255, 0.3), rgba(100, 50, 200, 0.15) 40%, transparent 70%);
    box-shadow:
      0 0 60px rgba(138, 43, 226, 0.4),
      inset -10px -10px 40px rgba(0, 0, 0, 0.3);
    animation: float 40s ease-in-out infinite;
    pointer-events: none;
    z-index: 0;
  }

  #root {
    position: relative;
    z-index: 1;
  }

  @keyframes starfield {
    from {
      transform: translateY(0) translateX(0);
    }
    to {
      transform: translateY(-300px) translateX(-100px);
    }
  }

  @keyframes nebula {
    0% {
      opacity: 0.4;
      transform: scale(1) rotate(0deg);
    }
    50% {
      opacity: 0.6;
      transform: scale(1.08) rotate(1deg);
    }
    100% {
      opacity: 0.4;
      transform: scale(1) rotate(0deg);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0) translateX(0) scale(1);
    }
    25% {
      transform: translateY(-30px) translateX(15px) scale(1.05);
    }
    50% {
      transform: translateY(-50px) translateX(0) scale(1);
    }
    75% {
      transform: translateY(-30px) translateX(-15px) scale(0.95);
    }
  }
}

/* Shooting stars animation */
@layer utilities {
  .shooting-star {
    position: fixed;
    width: 2px;
    height: 2px;
    background: white;
    border-radius: 50%;
    box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.8);
    animation: shoot 3s linear;
    pointer-events: none;
    z-index: 100;
  }

  @keyframes shoot {
    0% {
      transform: translateX(0) translateY(0) rotate(-45deg);
      opacity: 1;
    }
    70% {
      opacity: 1;
    }
    100% {
      transform: translateX(-300px) translateY(300px) rotate(-45deg);
      opacity: 0;
    }
  }

  .shooting-star::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100px;
    height: 1px;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.8) 50%, rgba(255, 255, 255, 0) 100%);
    transform: translateX(-100px) rotate(-45deg);
  }

  /* Twinkling star effect */
  .twinkle {
    animation: twinkle 2s ease-in-out infinite;
  }

  @keyframes twinkle {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.3;
      transform: scale(0.8);
    }
  }

  /* Cosmic glow effects */
  .cosmic-glow {
    box-shadow:
      0 0 20px rgba(138, 43, 226, 0.3),
      0 0 40px rgba(138, 43, 226, 0.15),
      inset 0 0 60px rgba(138, 43, 226, 0.05);
  }

  .cosmic-glow-blue {
    box-shadow:
      0 0 20px rgba(59, 130, 246, 0.3),
      0 0 40px rgba(59, 130, 246, 0.15),
      inset 0 0 60px rgba(59, 130, 246, 0.05);
  }

  .cosmic-glow-cyan {
    box-shadow:
      0 0 20px rgba(34, 211, 238, 0.3),
      0 0 40px rgba(34, 211, 238, 0.15),
      inset 0 0 60px rgba(34, 211, 238, 0.05);
  }

  /* Astro-themed cards */
  .astro-card {
    background: linear-gradient(135deg,
      rgba(138, 43, 226, 0.15) 0%,
      rgba(59, 130, 246, 0.10) 50%,
      rgba(34, 211, 238, 0.15) 100%);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(138, 43, 226, 0.3);
    box-shadow:
      0 8px 32px 0 rgba(138, 43, 226, 0.2),
      inset 0 0 20px rgba(255, 255, 255, 0.05);
  }

  .astro-button {
    background: linear-gradient(135deg,
      rgba(138, 43, 226, 0.4) 0%,
      rgba(59, 130, 246, 0.4) 100%);
    border: 1px solid rgba(138, 43, 226, 0.5);
    transition: all 0.3s ease;
  }

  .astro-button:hover {
    background: linear-gradient(135deg,
      rgba(138, 43, 226, 0.6) 0%,
      rgba(59, 130, 246, 0.6) 100%);
    box-shadow: 0 0 30px rgba(138, 43, 226, 0.5);
    transform: translateY(-2px);
  }

  /* Fix input and form element visibility */
  input, textarea, select {
    color: rgba(255, 255, 255, 0.95) !important;
  }

  input::placeholder, textarea::placeholder {
    color: rgba(255, 255, 255, 0.4) !important;
  }

  /* Muted backgrounds should be dark but visible */
  .bg-muted {
    background: rgba(138, 43, 226, 0.1) !important;
    border: 1px solid rgba(138, 43, 226, 0.2);
  }

  /* Secondary backgrounds */
  .bg-secondary {
    background: rgba(59, 130, 246, 0.15) !important;
    color: rgba(255, 255, 255, 0.9);
  }

  /* Card backgrounds should not be white */
  .bg-card {
    background: rgba(30, 10, 60, 0.6) !important;
  }

  /* Popover and dropdown styling */
  [role="menu"], [role="listbox"], .popover-content {
    background: rgba(30, 10, 60, 0.95) !important;
    border: 1px solid rgba(138, 43, 226, 0.3);
    backdrop-filter: blur(10px);
  }

  /* Select dropdown items */
  [role="option"] {
    color: rgba(255, 255, 255, 0.9) !important;
  }

  [role="option"]:hover {
    background: rgba(138, 43, 226, 0.3) !important;
  }

  /* Labels and text elements visibility */
  label, .text-muted-foreground {
    color: rgba(255, 255, 255, 0.7) !important;
  }

  /* Button text visibility */
  button {
    color: rgba(255, 255, 255, 0.9);
  }

  /* White background fix */
  .bg-background {
    background: transparent !important;
  }

  /* Ensure all text is visible */
  p, span, div {
    color: inherit;
  }

  /* Fix select trigger */
  [data-testid*="select"] button {
    background: rgba(59, 130, 246, 0.15) !important;
    border: 1px solid rgba(138, 43, 226, 0.3);
    color: rgba(255, 255, 255, 0.9) !important;
  }

  /* Fix number inputs that might be invisible */
  input[type="number"] {
    -webkit-text-fill-color: rgba(255, 255, 255, 0.95);
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}